unit Dialog.Controllers.Factory;

interface

uses
  Dialogs.Controllers.Method.Interfaces,
  Dialogs.Controllers.Method.OpenDialogs,
  Dialogs.Controllers.Method.SaveDialogs,
  System.Classes;

type
  TTypeDialogs = (tpOpenDialog, tpSaveDialog);

  TDialogFactory = class(TInterfacedObject, iDialogFactory)
  private
  public
    function Dialogs(TypeDialog: TTypeDialogs): TComponent;
    constructor Create;
    destructor Destroy; override;
    class function New: iDialogFactory;
  end;

implementation

{ TDialogFactory }

constructor TDialogFactory.Create;
begin

end;

destructor TDialogFactory.Destroy;
begin

  inherited;
end;

function TDialogFactory.Dialogs(TypeDialog: TTypeDialogs): TComponent;
begin

end;

class function TDialogFactory.New: iDialogFactory;
begin
  Result := Self.Create;
end;

end.
